//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Script/Player/Player Controll.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControll: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControll()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player Controll"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""922ecbc8-04b7-4568-b473-697fd0e3b549"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c7b7571f-ec57-4dfd-897c-57c06e0159c0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""2f6be4a0-f0d1-463d-82f0-8cb64d9ae9a6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""d64681db-b50c-4362-8d10-aaea64650624"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToogleTorch"",
                    ""type"": ""Button"",
                    ""id"": ""69c5a1dd-abe9-4833-9205-2e5757aafab8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""dbb4004e-dbc5-415d-9ca0-ec36b529279f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelInteraction"",
                    ""type"": ""Button"",
                    ""id"": ""a2d353d2-af5b-4525-b64e-a795816c376b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropInventory"",
                    ""type"": ""Button"",
                    ""id"": ""e085d7ae-bd57-42ab-8500-515db33f793d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseInventory"",
                    ""type"": ""Button"",
                    ""id"": ""b62e7c25-798f-43b7-af01-65fc718bfda1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeItemPositive"",
                    ""type"": ""Value"",
                    ""id"": ""b51d9dcb-43bd-45b4-86e4-618fb0ac6e08"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SpecialSense"",
                    ""type"": ""Button"",
                    ""id"": ""c73b5f77-698a-4da4-b881-6454afaa50ba"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowQuest"",
                    ""type"": ""Button"",
                    ""id"": ""a311d026-0e35-48ed-8a02-53277ed041f2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4ebb575a-b9b2-4f49-8c94-9f19c33a118f"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b80fa924-8aff-45a2-9e6a-199d09382cb3"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""249391e1-7483-4140-a09d-20ed0392eb5c"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67b23dc3-2a99-4e2b-bf48-03d391f898d8"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToogleTorch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f19f0542-407d-4624-a43d-21f23c0888a2"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToogleTorch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9f96f00-b9c0-45c8-9937-76d5947918ee"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cea55239-2e5f-4a19-9ab3-3f77958e979d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de42f7c7-8db3-4d8a-a4e3-c38540959c6b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23970514-9dfe-4e7c-aaaf-0145fce9e8bc"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""fb7630b3-f228-4a66-8ac2-e9e6e51af48c"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""49bdac9b-4133-4431-8578-6fbc1001a0a1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""e15bceeb-263c-43e2-9649-02020b97b9be"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""7917737a-7040-4a9a-83f3-0a7ece881c6e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""3fdde393-dff6-410f-93c8-61dcdba7ff42"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b9358932-2e62-4d28-9d7f-dd82577bd1b2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItemPositive"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""eba452b0-a4b1-4ec7-8ca0-b28bc86382ac"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItemPositive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ada8ba1e-647f-49dc-afba-006f0ccf1f7d"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItemPositive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""39e043fa-1f67-49b5-be60-dec5fef0343b"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialSense"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""342db360-063f-4448-9e66-9b8bd46c0dca"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowQuest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
        m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
        m_Player_ToogleTorch = m_Player.FindAction("ToogleTorch", throwIfNotFound: true);
        m_Player_Interaction = m_Player.FindAction("Interaction", throwIfNotFound: true);
        m_Player_CancelInteraction = m_Player.FindAction("CancelInteraction", throwIfNotFound: true);
        m_Player_DropInventory = m_Player.FindAction("DropInventory", throwIfNotFound: true);
        m_Player_UseInventory = m_Player.FindAction("UseInventory", throwIfNotFound: true);
        m_Player_ChangeItemPositive = m_Player.FindAction("ChangeItemPositive", throwIfNotFound: true);
        m_Player_SpecialSense = m_Player.FindAction("SpecialSense", throwIfNotFound: true);
        m_Player_ShowQuest = m_Player.FindAction("ShowQuest", throwIfNotFound: true);
    }

    ~@PlayerControll()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, PlayerControll.Player.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Crouch;
    private readonly InputAction m_Player_Sprint;
    private readonly InputAction m_Player_ToogleTorch;
    private readonly InputAction m_Player_Interaction;
    private readonly InputAction m_Player_CancelInteraction;
    private readonly InputAction m_Player_DropInventory;
    private readonly InputAction m_Player_UseInventory;
    private readonly InputAction m_Player_ChangeItemPositive;
    private readonly InputAction m_Player_SpecialSense;
    private readonly InputAction m_Player_ShowQuest;
    public struct PlayerActions
    {
        private @PlayerControll m_Wrapper;
        public PlayerActions(@PlayerControll wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
        public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
        public InputAction @ToogleTorch => m_Wrapper.m_Player_ToogleTorch;
        public InputAction @Interaction => m_Wrapper.m_Player_Interaction;
        public InputAction @CancelInteraction => m_Wrapper.m_Player_CancelInteraction;
        public InputAction @DropInventory => m_Wrapper.m_Player_DropInventory;
        public InputAction @UseInventory => m_Wrapper.m_Player_UseInventory;
        public InputAction @ChangeItemPositive => m_Wrapper.m_Player_ChangeItemPositive;
        public InputAction @SpecialSense => m_Wrapper.m_Player_SpecialSense;
        public InputAction @ShowQuest => m_Wrapper.m_Player_ShowQuest;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @ToogleTorch.started += instance.OnToogleTorch;
            @ToogleTorch.performed += instance.OnToogleTorch;
            @ToogleTorch.canceled += instance.OnToogleTorch;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @CancelInteraction.started += instance.OnCancelInteraction;
            @CancelInteraction.performed += instance.OnCancelInteraction;
            @CancelInteraction.canceled += instance.OnCancelInteraction;
            @DropInventory.started += instance.OnDropInventory;
            @DropInventory.performed += instance.OnDropInventory;
            @DropInventory.canceled += instance.OnDropInventory;
            @UseInventory.started += instance.OnUseInventory;
            @UseInventory.performed += instance.OnUseInventory;
            @UseInventory.canceled += instance.OnUseInventory;
            @ChangeItemPositive.started += instance.OnChangeItemPositive;
            @ChangeItemPositive.performed += instance.OnChangeItemPositive;
            @ChangeItemPositive.canceled += instance.OnChangeItemPositive;
            @SpecialSense.started += instance.OnSpecialSense;
            @SpecialSense.performed += instance.OnSpecialSense;
            @SpecialSense.canceled += instance.OnSpecialSense;
            @ShowQuest.started += instance.OnShowQuest;
            @ShowQuest.performed += instance.OnShowQuest;
            @ShowQuest.canceled += instance.OnShowQuest;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @ToogleTorch.started -= instance.OnToogleTorch;
            @ToogleTorch.performed -= instance.OnToogleTorch;
            @ToogleTorch.canceled -= instance.OnToogleTorch;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @CancelInteraction.started -= instance.OnCancelInteraction;
            @CancelInteraction.performed -= instance.OnCancelInteraction;
            @CancelInteraction.canceled -= instance.OnCancelInteraction;
            @DropInventory.started -= instance.OnDropInventory;
            @DropInventory.performed -= instance.OnDropInventory;
            @DropInventory.canceled -= instance.OnDropInventory;
            @UseInventory.started -= instance.OnUseInventory;
            @UseInventory.performed -= instance.OnUseInventory;
            @UseInventory.canceled -= instance.OnUseInventory;
            @ChangeItemPositive.started -= instance.OnChangeItemPositive;
            @ChangeItemPositive.performed -= instance.OnChangeItemPositive;
            @ChangeItemPositive.canceled -= instance.OnChangeItemPositive;
            @SpecialSense.started -= instance.OnSpecialSense;
            @SpecialSense.performed -= instance.OnSpecialSense;
            @SpecialSense.canceled -= instance.OnSpecialSense;
            @ShowQuest.started -= instance.OnShowQuest;
            @ShowQuest.performed -= instance.OnShowQuest;
            @ShowQuest.canceled -= instance.OnShowQuest;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnToogleTorch(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnCancelInteraction(InputAction.CallbackContext context);
        void OnDropInventory(InputAction.CallbackContext context);
        void OnUseInventory(InputAction.CallbackContext context);
        void OnChangeItemPositive(InputAction.CallbackContext context);
        void OnSpecialSense(InputAction.CallbackContext context);
        void OnShowQuest(InputAction.CallbackContext context);
    }
}
